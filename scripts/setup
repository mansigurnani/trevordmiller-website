#!/bin/sh
set -euo pipefail

# Environment (Unix)

echo "Installing system package manager"
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

echo "Installing system packages / apps"
brew install vim git node
brew cask install 1password

# Editor (Vim)

echo "Generating editor configuration dotfile"
cat <<EOF >~/.vimrc
" Sync plugins with git repos
call plug#begin('~/.vim/plugged')

" Enhance core defaults to work consistently
Plug 'https://github.com/tpope/vim-sensible'

" Enhance indenting to indent automatically
Plug 'https://github.com/tpope/vim-sleuth'

" Enhance languages to use updated language packs
Plug 'https://github.com/sheerun/vim-polyglot'

" Enhance wildignore to ignore .gitignore items
Plug 'https://github.com/octref/RootIgnore'

" Enhance statics analysis to use installed programs
Plug 'https://github.com/dense-analysis/ale'

" Enhance color scheme to use terminal color palette
Plug 'https://github.com/arcticicestudio/nord-vim'
call plug#end()

" Enhance grep to ignore .gitignore items
set grepprg=git\ --no-pager\ grep\ --no-color\ -n\ $*
set grepformat=%f:%l:%m,%m\ %f\ match%ts,%f

" Enhance color scheme to use terminal color palette
colorscheme nord
EOF

echo "Installing editor plugin manager"
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
	https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

echo "Installing editor plugins"
vim +PlugInstall +qall

# Version control (Git)

echo "Generating version control configuration dotfile"
cat <<EOF >~/.gitconfig
[user]
  name = Trevor D. Miller
  email = 5497885+trevordmiller@users.noreply.github.com
  useconfigonly = true
EOF

# Language (Rust)

# Language (JavaScript)

# Operating system (macOS)

echo "Creating ~/repos directory for git repos"
cd ~
mkdir repos

echo "Exposing shell scripts locally"
cd ~/repos
git clone https://github.com/trevordmiller/scripts.git
cd ~

echo "Configuring keyboard key repeat"
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain InitialKeyRepeat -int 10

echo "Configuring screenshots to save in Downloads"
defaults write com.apple.screencapture location ~/Downloads
killall SystemUIServer

echo "Configuring menu bar to autohide"
defaults write NSGlobalDomain _HIHideMenuBar -bool true
killall Finder

echo "Configuring dock to autohide"
osascript <<EOD
  tell application "System Events"
    if (get autohide of dock preferences) is false then
      tell dock preferences to set autohide to not autohide
    end if
  end tell
EOD

echo "Rebooting"
sudo shutdown -r now
